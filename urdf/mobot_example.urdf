<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/demons/dev_ws/src/mobot/urdf/mobot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mobot">
  <!--skid_steer_drive_controller-->

  <gazebo>
        <plugin name='planar_move' filename='libgazebo_ros_planar_move.so'>
            <ros>
              <namespace>/mobot</namespace>
            </ros>

            <update_rate>100</update_rate>
            <publish_rate>10</publish_rate>

            <!-- output -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>

            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>robot_footprint</robot_base_frame>

            <covariance_x>0.0001</covariance_x>
            <covariance_y>0.0001</covariance_y>
            <covariance_yaw>0.01</covariance_yaw>
        </plugin>
    </gazebo>
  <!-- camera -->
  <gazebo reference="camera">
    <sensor name="camera_sensor" type="camera">
      <update_rate>30.0</update_rate>
      <always_on>1</always_on>
      <camera name="camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <ros>
          <namespace>/mobot</namespace>
          <argument>camera/image_raw:=/mobot/camera/image</argument>
          <argument>camera/camera_info:=/mobot/camera/image/camera_info</argument>
        </ros>
        <camera_name>camera</camera_name>
        <frame_name>camera</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- hokuyo -->

  <gazebo reference="hokuyo">
        <sensor name="sensor_ray" type="ray">
          <ray>
            <scan>
              <horizontal>
                <samples>1000</samples>
                <resolution>1.0</resolution>
                <min_angle>-1.5</min_angle>
                <max_angle>1.5</max_angle>
              </horizontal>

              <!--vertical>
                <samples>100</samples>
                <resolution>1.0</resolution>
                <min_angle>-1</min_angle>
                <max_angle>1</max_angle>
              </vertical-->
              <!--uti-line lidar-->

            </scan>
            <range>
              <min>0.1</min>
              <max>10</max>
            </range>
            <noise>
              <type>gaussian</type>
              <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
              <mean>0.0</mean>
              <stddev>0.01</stddev>
        </noise>
          </ray>
          <always_on>true</always_on>
          <update_rate>10.0</update_rate>
          <plugin name="pc2" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=pointcloud2</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud2</output_type>
          </plugin>
          <plugin name="pc" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=pointcloud</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud</output_type>
          </plugin>
          <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=laserscan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
          </plugin>
          <plugin name="range" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/ray</namespace>
              <remapping>~/out:=range</remapping>
            </ros>
            <output_type>sensor_msgs/Range</output_type>
          </plugin>
        </sensor>
    </gazebo>

  <link name="robot_footprint"/>

  <joint name="robot_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="robot_footprint"/>
    <child link="chassis"/>
  </joint>

  <link name="chassis">
    <pose>0 0 0.1 0 0 0</pose>
    <inertial>
      <mass value="15.0"/>
      <origin rpy=" 0 0 0" xyz="0.0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <collision name="collision">
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </collision>
    <visual name="chassis_visual">
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </visual>
  </link>

  <link name="camera">
    <inertial>
      <mass value="0.1"/>
      <origin rpy=" 0 0 0" xyz="0.05 0.05 0.05"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual name="camera_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision name="camera_colision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>

  <link name="hokuyo">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual name="hokuyo_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <mesh filename="$(find mobot)/meshes/hokuyo.dae"/> -->
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision name="hokuyo_colision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>


  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <child link="camera"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <joint name="hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.15 0 0.1"/>
    <child link="hokuyo"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>

  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="camera">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="hokuyo">
    <material>Gazebo/Black</material>
  </gazebo>

</robot>